/**
 *  Schema.org/Service
 *  A service provided by an organization, e.g. delivery service, print services, etc.
 * 
 *  @author schema.org
 *  @class Service
 *  @module org.schema
 *  @extends Intangible
 */
var Service = /**
 *  Constructor, automatically sets @context and @type.
 * 
 *  @constructor
 */
function() {
    Intangible.call(this);
    this.context = "http://schema.org/";
    this.type = "Service";
};
Service = stjs.extend(Service, Intangible, [], function(constructor, prototype) {
    /**
     *  Schema.org/serviceAudience
     *  The audience eligible for this service.
     * 
     *  @property serviceAudience
     *  @type Audience
     */
    serviceAudience = null;
    /**
     *  Schema.org/serviceArea
     *  The geographic area where the service is provided.
     * 
     *  @property serviceArea
     *  @type GeoShape
     */
    serviceArea = null;
    /**
     *  Schema.org/provider
     *  The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
     * 
     *  @property provider
     *  @type Person
     */
    provider = null;
    /**
     *  Schema.org/audience
     *  An intended audience, i.e. a group for whom something was created.
     * 
     *  @property audience
     *  @type Audience
     */
    audience = null;
    /**
     *  Schema.org/hasOfferCatalog
     *  Indicates an OfferCatalog listing for this Organization, Person, or Service.
     * 
     *  @property hasOfferCatalog
     *  @type OfferCatalog
     */
    hasOfferCatalog = null;
    /**
     *  Schema.org/hoursAvailable
     *  The hours during which this service or contact is available.
     * 
     *  @property hoursAvailable
     *  @type OpeningHoursSpecification
     */
    hoursAvailable = null;
    /**
     *  Schema.org/providerMobility
     *  Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
     * 
     *  @property providerMobility
     *  @type Text
     */
    providerMobility = null;
    /**
     *  Schema.org/aggregateRating
     *  The overall rating, based on a collection of reviews or ratings, of the item.
     * 
     *  @property aggregateRating
     *  @type AggregateRating
     */
    aggregateRating = null;
    /**
     *  Schema.org/offers
     *  An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.
     * 
     *  @property offers
     *  @type Offer
     */
    offers = null;
    /**
     *  Schema.org/award
     *  An award won by or for this item.
     * 
     *  @property award
     *  @type Text
     */
    award = null;
    /**
     *  Schema.org/category
     *  A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
     * 
     *  @property category
     *  @type Text
     */
    category = null;
    /**
     *  Schema.org/broker
     *  An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
     * 
     *  @property broker
     *  @type Person
     */
    broker = null;
    /**
     *  Schema.org/serviceOutput
     *  The tangible thing generated by the service, e.g. a passport, permit, etc.
     * 
     *  @property serviceOutput
     *  @type Thing
     */
    serviceOutput = null;
    /**
     *  Schema.org/logo
     *  An associated logo.
     * 
     *  @property logo
     *  @type ImageObject
     */
    logo = null;
    /**
     *  Schema.org/isSimilarTo
     *  A pointer to another, functionally similar product (or multiple products).
     * 
     *  @property isSimilarTo
     *  @type Product
     */
    isSimilarTo = null;
    /**
     *  Schema.org/isRelatedTo
     *  A pointer to another, somehow related product (or multiple products).
     * 
     *  @property isRelatedTo
     *  @type Product
     */
    isRelatedTo = null;
    /**
     *  Schema.org/availableChannel
     *  A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
     * 
     *  @property availableChannel
     *  @type ServiceChannel
     */
    availableChannel = null;
    /**
     *  Schema.org/review
     *  A review of the item.
     * 
     *  @property review
     *  @type Review
     */
    review = null;
    /**
     *  Schema.org/serviceType
     *  The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
     * 
     *  @property serviceType
     *  @type Text
     */
    serviceType = null;
    /**
     *  Schema.org/produces
     *  The tangible thing generated by the service, e.g. a passport, permit, etc.
     * 
     *  @property produces
     *  @type Thing
     */
    produces = null;
    /**
     *  Schema.org/brand
     *  The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
     * 
     *  @property brand
     *  @type Organization
     */
    brand = null;
    /**
     *  Schema.org/areaServed
     *  The geographic area where a service or offered item is provided.
     * 
     *  @property areaServed
     *  @type Place
     */
    areaServed = null;
}, {serviceAudience: "Audience", serviceArea: "GeoShape", provider: "Person", audience: "Audience", hasOfferCatalog: "OfferCatalog", hoursAvailable: "OpeningHoursSpecification", aggregateRating: "AggregateRating", offers: "Offer", broker: "Person", serviceOutput: "Thing", logo: "ImageObject", isSimilarTo: "Product", isRelatedTo: "Product", availableChannel: "ServiceChannel", review: "Review", produces: "Thing", brand: "Organization", areaServed: "Place", identifier: "Object", image: "Object", potentialAction: "Action", mainEntityOfPage: "Object", owner: {name: "Array", arguments: [null]}, signature: {name: "Array", arguments: [null]}, reader: {name: "Array", arguments: [null]}, forwardingTable: "Object", atProperties: {name: "Array", arguments: [null]}}, {});
