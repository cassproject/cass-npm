{
	"name": "cassproject",
	"version": "1.5.8",
	"description": "Competency and Skills Service",
	"main": "index.js",
	"scripts": {
		"test": "npm run test15Https11 && npm run test15Https && npm run test15 && npm run test14 && npm run test13 && npm run test12",
		"testCassTest": "npm run testkill && docker run -d --name cass-test -p80:80 cass-test && wait-on http://localhost/api/ping && npm run testCypressEdge && npm run testCypress && npm run testNode16 && npm run testNode15 && npm run testNode14 && npm run testNode13 && npm run testNode12 && npm run testkill",
		"testDevHttps": "npm run testkill && docker run -d --name cass-test -p443:80 -e HTTPS=true cassproject/cass:dev && wait-on https://localhost/api/ping && npm run testCypressEdgeHttps && npm run testCypressHttps && npm run testNode16Https && npm run testNode15Https && npm run testNode14Https && npm run testNode13Https && npm run testNode12Https",
		"test15Https": "npm run testkill && docker run -d --name cass-test -p443:443 -e HTTPS=true cassproject/cass:1.5.5 && wait-on https://localhost/api/ping && npm run testCypressEdgeHttps && npm run testCypressHttps && npm run testNode16Https && npm run testkill",
		"test15Https11": "npm run testkill && docker run -d --name cass-test -p443:443 -e HTTPS=true -e HTTP2=false cassproject/cass:dev && wait-on https://localhost/api/ping && npm run testCypressEdgeHttps && npm run testCypressHttps && npm run testNode16Https && npm run testkill",
		"test15": "npm run testkill && docker run -d --name cass-test -p80:80 cassproject/cass:1.5.5 && wait-on http://localhost/api/ping && npm run testCypressEdge && npm run testCypress && npm run testNode16 && npm run testNode15 && npm run testNode14 && npm run testNode13 && npm run testNode12 && npm run testkill",
		"test14": "npm run testkill && docker run -d --name cass-test -p80:80 cassproject/cass:1.4.4 && wait-on http://localhost/api/ping && npm run testCypressEdge && npm run testCypress && npm run testNode16 && npm run testNode15 && npm run testNode14 && npm run testNode13 && npm run testNode12 && npm run testkill",
		"test13": "npm run testkill && docker run -d --name cass-test -p80:80 cassproject/cass:1.3.18 && wait-on http://localhost/api/ping && npm run testCypressEdge && npm run testCypress && npm run testNode16 && npm run testNode15 && npm run testNode14 && npm run testNode13 && npm run testNode12 && npm run testkill",
		"test12": "npm run testkill && docker run -d --name cass-test -p80:80 cassproject/cass:1.2.44 && wait-on http://localhost/api/ping && npm run testCypressEdge && npm run testCypress && npm run testNode16 && npm run testNode15 && npm run testNode14 && npm run testNode13 && npm run testNode12 && npm run testkill",
		"testkill": "docker kill cass-test | exit 0 && docker rm cass-test | exit 0",
		"testNode16": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/node16 -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testNode16Https": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/node16https -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testNode15": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/node15 -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testNode15Https": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/node15https -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testNode14": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/node14 -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testNode14Https": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/node14https -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testNode13": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/node13 -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testNode13Https": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/node13https -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testNode12": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/node12 -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testNode12Https": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/node12https -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testCypress": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/cypress -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testCypressEdge": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/cypressEdge -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testCypressHttps": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/cypressHttps -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"testCypressEdgeHttps": "docker kill npm-cass & docker rm -f npm-cass & docker build --progress plain -f docker/cypressEdgeHttps -t npm-cass . & docker run --network=\"host\" --name npm-cass npm-cass",
		"autotest": "nodemon test.js",
		"autoindex": "nodemon index.js",
		"mocha": "mocha -b src/**/*.test.js",
		"mocha:clientSideCertificates": "export CASS_LOOPBACK=https://localhost/api/|| set CASS_LOOPBACK=https://localhost/api/&& mocha -b src/**/*.test.js",
		"mochaGraph": "mocha -b src/com/eduworks/ec/graph/**/*.test.js",
		"automocha": "nodemon --exec \"npm run mocha\"",
		"automochaGraph": "nodemon --exec \"npm run mochaGraph\"",
		"automocha:clientSideCertificates": "nodemon --exec \"npm run mocha:clientSideCertificates\"",
		"lint": "eslint src -c .eslintrc.js --ext .js --fix",
		"docs": "npm install yuidocjs yuidoc-ember-cli-theme && yuidoc -c yuidoc.json -o docs -e .js src && npm remove yuidocjs yuidoc-ember-cli-theme",
		"doclint": "npm install yuidocjs yuidoc-ember-cli-theme && yuidoc --lint -c yuidoc.json -o docs -e .js src",
		"browserify:cypress:open": "cypress open --config-file cypressBrowserify.json",
		"browserify:cypress:open:https": "cypress open -e CASS_LOOPBACK=https://localhost/api/ --config-file cypressBrowserify.json",
		"webpack:cypress:open": "cypress open --config-file cypressWebpack.json",
		"webpack:cypress:open:https": "cypress open -e CASS_LOOPBACK=https://localhost/api/ --config-file cypressWebpack.json",
		"browserify:cypress": "cypress run --config-file cypressBrowserify.json --headless --browser chrome",
		"browserify:cypressHttps": "cypress run -e CASS_LOOPBACK=https://localhost/api/ --config-file cypressBrowserify.json --headless --browser chrome",
		"browserify:cypressEdge": "cypress run --config-file cypressBrowserify.json --headless --browser edge",
		"browserify:cypressEdgeHttps": "cypress run -e CASS_LOOPBACK=https://localhost/api/ --config-file cypressBrowserify.json --headless --browser edge",
		"webpack:cypress": "cypress run --config-file cypressWebpack.json --headless --browser chrome",
		"webpack:cypressHttps": "cypress run -e CASS_LOOPBACK=https://localhost/api/ --config-file cypressWebpack.json --headless --browser chrome",
		"webpack:cypressEdge": "cypress run --config-file cypressWebpack.json --headless --browser edge",
		"webpack:cypressEdgeHttps": "cypress run -e CASS_LOOPBACK=https://localhost/api/ --config-file cypressWebpack.json --headless --browser edge"
	},
	"contributors": [
		{
			"name": "Devlin Junker (Retired)",
			"email": "devlin.junker@eduworks.com"
		},
		{
			"name": "Thomas Buskirk (Departed)",
			"email": "tom.buskirk@eduworks.com"
		},
		{
			"name": "Kristin Wood",
			"email": "kristin.wood@eduworks.com"
		},
		{
			"name": "Ronald 'Fritz' Ray",
			"email": "fritz.ray@eduworks.com"
		}
	],
	"dependencies": {
		"axios": "^0.27.2",
		"base64-arraybuffer": "^1.0.2",
		"forge": "^2.3.0",
		"form-data": "^4.0.0",
		"http2-wrapper": "^2.1.11",
		"jsonld": "^5.2.0",
		"node-forge": "^1.3.1",
		"papaparse": "^5.3.2",
		"pem-jwk": "^2.0.0",
		"promise-worker": "^2.0.1",
		"rdf-canonize": "^3.0.0",
		"web-worker": "^1.2.0"
	},
	"files": [
		"lib/",
		"src/",
		"index.js",
		"test.js"
	],
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com/cassproject/cass-npm.git"
	},
	"keywords": [
		"cass",
		"cassproject",
		"competency"
	],
	"author": "Fritz Ray <fritz.ray@eduworks.com> (http://docs.cassproject.org)",
	"license": "Apache-2.0",
	"bugs": {
		"url": "https://github.com/cassproject/cass-npm/issues"
	},
	"homepage": "https://github.com/cassproject/cass-npm#readme",
	"devDependencies": {
		"@babel/core": "^7.17.10",
		"@babel/preset-env": "^7.17.10",
		"@cypress/browserify-preprocessor": "^3.0.2",
		"@cypress/vite-dev-server": "^2.2.3",
		"@cypress/webpack-preprocessor": "^5.11.1",
		"babel-eslint": "^10.1.0",
		"babel-loader": "^8.2.5",
		"babel-plugin-transform-remove-strict-mode": "^0.0.2",
		"chai": "^4.3.6",
		"convert-hrtime": "^5.0.0",
		"cypress": "^9.6.1",
		"eslint": "^8.15.0",
		"mocha": "^10.0.0",
		"node-polyfill-webpack-plugin": "^1.1.4",
		"nodemon": "^2.0.16",
		"wait-on": "^6.0.1",
		"webpack": "^5.72.1",
		"webpack-cli": "^4.9.2"
	}
}
